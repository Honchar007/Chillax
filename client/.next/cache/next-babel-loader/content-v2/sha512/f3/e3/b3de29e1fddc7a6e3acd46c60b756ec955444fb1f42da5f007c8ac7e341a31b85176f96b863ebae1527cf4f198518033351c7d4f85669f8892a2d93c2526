{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\Chillax\\\\client\\\\pages\\\\parties.js\";\nimport React from 'react';\nimport Navbar from '../components/Navbar/Navbar';\nimport CardParty from '../components/CardParty';\nimport styled from 'styled-components';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nconst PartyWrapper = styled.div.withConfig({\n  displayName: \"parties__PartyWrapper\",\n  componentId: \"sc-7emx0k-0\"\n})([\"align-items:center;justify-content:center;display:flex;\"]);\nconst CardPart = styled(Card).withConfig({\n  displayName: \"parties__CardPart\",\n  componentId: \"sc-7emx0k-1\"\n})([\"max-width:345px;min-width:345px;&:hover{box-shadow:0px 3px 15px #e917de;}\"]);\n\nconst cutHandler = text => {\n  if (text.length > 100) return text.substring(0, 100) + '...';\n};\n\nconst Parties = ({\n  data\n}) => {\n  if (!posts) {\n    ;\n    'Loading...';\n  }\n\n  console.log(posts);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PartyWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        style: {\n          justifyContent: 'center',\n          marginTop: 10\n        },\n        spacing: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\nexport default Parties;\nexport async function getServerSideProps() {\n  const res = await fetch(`http://localhost:5000/api/post`);\n  const posts = await res.json();\n\n  if (!posts) {\n    return {\n      notFound: true\n    };\n  }\n\n  const data = {\n    title: 'Hello Sir'\n  };\n  return {\n    props: data\n  };\n  return {\n    props: {\n      posts\n    }\n  };\n}\n/* {posts.map((post, idx) => {\r\n            return (\r\n              <Grid item key={idx}>\r\n                <CardPart>\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      alt={post.title}\r\n                      height=\"140\"\r\n                      image={post.imgUrl}\r\n                      title={post.title}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {post.title}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        {cutHandler(post.text)}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      Share\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      Learn More\r\n                    </Button>\r\n                  </CardActions>\r\n                </CardPart>\r\n              </Grid>\r\n            )\r\n          })}*/","map":{"version":3,"sources":["D:/Projects/Chillax/client/pages/parties.js"],"names":["React","Navbar","CardParty","styled","Button","Grid","Card","CardActionArea","CardMedia","CardContent","Typography","CardActions","PartyWrapper","div","CardPart","cutHandler","text","length","substring","Parties","data","posts","console","log","justifyContent","marginTop","getServerSideProps","res","fetch","json","notFound","title","props"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,YAAY,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,+DAAlB;AAKA,MAAMC,QAAQ,GAAGX,MAAM,CAACG,IAAD,CAAT;AAAA;AAAA;AAAA,iFAAd;;AAQA,MAAMS,UAAU,GAAIC,IAAD,IAAU;AAC3B,MAAIA,IAAI,CAACC,MAAL,GAAc,GAAlB,EAAuB,OAAOD,IAAI,CAACE,SAAL,CAAe,CAAf,EAAkB,GAAlB,IAAyB,KAAhC;AACxB,CAFD;;AAIA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC5B,MAAI,CAACC,KAAL,EAAY;AACV;AAAE,gBAAD;AACF;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,YAAD;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,KAAK,EAAE;AAAEG,UAAAA,cAAc,EAAE,QAAlB;AAA4BC,UAAAA,SAAS,EAAE;AAAvC,SAFT;AAGE,QAAA,OAAO,EAAE;AAHX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAYD,CAlBD;;AAmBA,eAAeN,OAAf;AAEA,OAAO,eAAeO,kBAAf,GAAoC;AACzC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,gCAAF,CAAvB;AACA,QAAMP,KAAK,GAAG,MAAMM,GAAG,CAACE,IAAJ,EAApB;;AACA,MAAI,CAACR,KAAL,EAAY;AACV,WAAO;AACLS,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AACD,QAAMV,IAAI,GAAG;AAAEW,IAAAA,KAAK,EAAE;AAAT,GAAb;AACA,SAAO;AAAEC,IAAAA,KAAK,EAAEZ;AAAT,GAAP;AACA,SAAO;AACLY,IAAAA,KAAK,EAAE;AAAEX,MAAAA;AAAF;AADF,GAAP;AAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\r\nimport Navbar from '../components/Navbar/Navbar'\r\nimport CardParty from '../components/CardParty'\r\nimport styled from 'styled-components'\r\nimport Button from '@material-ui/core/Button'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport CardActions from '@material-ui/core/CardActions'\r\n\r\nconst PartyWrapper = styled.div`\r\n  align-items: center;\r\n  justify-content: center;\r\n  display: flex;\r\n`\r\nconst CardPart = styled(Card)`\r\n  max-width: 345px;\r\n  min-width: 345px;\r\n  &:hover {\r\n    box-shadow: 0px 3px 15px #e917de;\r\n  }\r\n`\r\n\r\nconst cutHandler = (text) => {\r\n  if (text.length > 100) return text.substring(0, 100) + '...'\r\n}\r\n\r\nconst Parties = ({ data }) => {\r\n  if (!posts) {\r\n    ;('Loading...')\r\n  }\r\n  console.log(posts)\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <PartyWrapper>\r\n        <Grid\r\n          container\r\n          style={{ justifyContent: 'center', marginTop: 10 }}\r\n          spacing={3}\r\n        ></Grid>\r\n      </PartyWrapper>\r\n    </>\r\n  )\r\n}\r\nexport default Parties\r\n\r\nexport async function getServerSideProps() {\r\n  const res = await fetch(`http://localhost:5000/api/post`)\r\n  const posts = await res.json()\r\n  if (!posts) {\r\n    return {\r\n      notFound: true,\r\n    }\r\n  }\r\n  const data = { title: 'Hello Sir' }\r\n  return { props: data }\r\n  return {\r\n    props: { posts },\r\n  }\r\n}\r\n/* {posts.map((post, idx) => {\r\n            return (\r\n              <Grid item key={idx}>\r\n                <CardPart>\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      component=\"img\"\r\n                      alt={post.title}\r\n                      height=\"140\"\r\n                      image={post.imgUrl}\r\n                      title={post.title}\r\n                    />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {post.title}\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        {cutHandler(post.text)}\r\n                      </Typography>\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      Share\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                      Learn More\r\n                    </Button>\r\n                  </CardActions>\r\n                </CardPart>\r\n              </Grid>\r\n            )\r\n          })}*/\r\n"]},"metadata":{},"sourceType":"module"}