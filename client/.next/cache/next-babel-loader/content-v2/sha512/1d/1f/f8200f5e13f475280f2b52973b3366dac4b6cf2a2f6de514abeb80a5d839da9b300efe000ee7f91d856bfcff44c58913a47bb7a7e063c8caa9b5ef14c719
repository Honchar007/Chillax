{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Projects\\\\Chillax\\\\client\\\\components\\\\MapGo.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component, useState } from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker, InfoWindow } from '../node_modules/react-google-maps/lib/index';\nexport class MapGo extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      address: '',\n      city: '',\n      area: '',\n      state: '',\n      zoom: 15,\n      height: 400,\n      mapPosition: {\n        lat: 0,\n        lng: 0\n      },\n      markerPoistion: {\n        lat: 0,\n        lng: 0\n      }\n    });\n\n    _defineProperty(this, \"onMarkerDragEnd\", async event => {\n      let newLat = event.latLng.lat();\n      let newLng = event.latLng.lng();\n      let response = await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${newLat}&longitude=${newLng}&localityLanguage=ru`);\n\n      if (response.ok) {\n        // если HTTP-статус в диапазоне 200-299\n        // получаем тело ответа (см. про этот метод ниже)\n        let json = await response.json();\n        console.log(json);\n      } else {\n        alert('Ошибка HTTP: ' + response.status);\n      }\n    });\n  }\n\n  render() {\n    const MyMapComponent = withScriptjs(withGoogleMap(props => /*#__PURE__*/_jsxDEV(GoogleMap, {\n      defaultZoom: 8,\n      defaultCenter: {\n        lat: -34.397,\n        lng: 150.644\n      },\n      children: props.isMarkerShown && /*#__PURE__*/_jsxDEV(Marker, {\n        draggable: true,\n        onDragEnd: this.onMarkerDragEnd,\n        position: {\n          lat: -34.397,\n          lng: 150.644\n        },\n        children: /*#__PURE__*/_jsxDEV(InfoWindow, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"hello\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)));\n    return /*#__PURE__*/_jsxDEV(MyMapComponent, {\n      isMarkerShown: true,\n      googleMapURL: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyCXLr9NcpJc8iwk3psaHI3UJIcMMvBGO5k&v=3.exp&libraries=geometry,drawing,places\",\n      loadingElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }, this),\n      containerElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `400px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 27\n      }, this),\n      mapElement: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: `100%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default MapGo;","map":{"version":3,"sources":["D:/Projects/Chillax/client/components/MapGo.js"],"names":["React","Component","useState","withScriptjs","withGoogleMap","GoogleMap","Marker","InfoWindow","MapGo","address","city","area","state","zoom","height","mapPosition","lat","lng","markerPoistion","event","newLat","latLng","newLng","response","fetch","ok","json","console","log","alert","status","render","MyMapComponent","props","isMarkerShown","onMarkerDragEnd"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,SAHF,EAIEC,MAJF,EAKEC,UALF,QAMO,6CANP;AAQA,OAAO,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAAA;AAAA;;AAAA,mCAC3B;AACNQ,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,IAAI,EAAE,EALA;AAMNC,MAAAA,MAAM,EAAE,GANF;AAONC,MAAAA,WAAW,EAAE;AAAEC,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAE;AAAf,OAPP;AAQNC,MAAAA,cAAc,EAAE;AAAEF,QAAAA,GAAG,EAAE,CAAP;AAAUC,QAAAA,GAAG,EAAE;AAAf;AARV,KAD2B;;AAAA,6CAYjB,MAAOE,KAAP,IAAiB;AACjC,UAAIC,MAAM,GAAGD,KAAK,CAACE,MAAN,CAAaL,GAAb,EAAb;AACA,UAAIM,MAAM,GAAGH,KAAK,CAACE,MAAN,CAAaJ,GAAb,EAAb;AACA,UAAIM,QAAQ,GAAG,MAAMC,KAAK,CACvB,qEAAoEJ,MAAO,cAAaE,MAAO,sBADxE,CAA1B;;AAIA,UAAIC,QAAQ,CAACE,EAAb,EAAiB;AACf;AACA;AACA,YAAIC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAjB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,OALD,MAKO;AACLG,QAAAA,KAAK,CAAC,kBAAkBN,QAAQ,CAACO,MAA5B,CAAL;AACD;AACF,KA3BkC;AAAA;;AA4BnCC,EAAAA,MAAM,GAAG;AACP,UAAMC,cAAc,GAAG7B,YAAY,CACjCC,aAAa,CAAE6B,KAAD,iBACZ,QAAC,SAAD;AACE,MAAA,WAAW,EAAE,CADf;AAEE,MAAA,aAAa,EAAE;AAAEjB,QAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBC,QAAAA,GAAG,EAAE;AAArB,OAFjB;AAAA,gBAIGgB,KAAK,CAACC,aAAN,iBACC,QAAC,MAAD;AACE,QAAA,SAAS,EAAE,IADb;AAEE,QAAA,SAAS,EAAE,KAAKC,eAFlB;AAGE,QAAA,QAAQ,EAAE;AAAEnB,UAAAA,GAAG,EAAE,CAAC,MAAR;AAAgBC,UAAAA,GAAG,EAAE;AAArB,SAHZ;AAAA,+BAKE,QAAC,UAAD;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,YADW,CADoB,CAAnC;AAoBA,wBACE,QAAC,cAAD;AACE,MAAA,aAAa,MADf;AAEE,MAAA,YAAY,EAAC,+HAFf;AAGE,MAAA,cAAc,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEH,UAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHlB;AAIE,MAAA,gBAAgB,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA,cAJpB;AAKE,MAAA,UAAU,eAAE;AAAK,QAAA,KAAK,EAAE;AAAEA,UAAAA,MAAM,EAAG;AAAX;AAAZ;AAAA;AAAA;AAAA;AAAA;AALd;AAAA;AAAA;AAAA;AAAA,YADF;AASD;;AA1DkC;AA6DrC,eAAeN,KAAf","sourcesContent":["import React, { Component, useState } from 'react'\r\nimport {\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker,\r\n  InfoWindow,\r\n} from '../node_modules/react-google-maps/lib/index'\r\n\r\nexport class MapGo extends Component {\r\n  state = {\r\n    address: '',\r\n    city: '',\r\n    area: '',\r\n    state: '',\r\n    zoom: 15,\r\n    height: 400,\r\n    mapPosition: { lat: 0, lng: 0 },\r\n    markerPoistion: { lat: 0, lng: 0 },\r\n  }\r\n\r\n  onMarkerDragEnd = async (event) => {\r\n    let newLat = event.latLng.lat()\r\n    let newLng = event.latLng.lng()\r\n    let response = await fetch(\r\n      `https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${newLat}&longitude=${newLng}&localityLanguage=ru`\r\n    )\r\n\r\n    if (response.ok) {\r\n      // если HTTP-статус в диапазоне 200-299\r\n      // получаем тело ответа (см. про этот метод ниже)\r\n      let json = await response.json()\r\n      console.log(json)\r\n    } else {\r\n      alert('Ошибка HTTP: ' + response.status)\r\n    }\r\n  }\r\n  render() {\r\n    const MyMapComponent = withScriptjs(\r\n      withGoogleMap((props) => (\r\n        <GoogleMap\r\n          defaultZoom={8}\r\n          defaultCenter={{ lat: -34.397, lng: 150.644 }}\r\n        >\r\n          {props.isMarkerShown && (\r\n            <Marker\r\n              draggable={true}\r\n              onDragEnd={this.onMarkerDragEnd}\r\n              position={{ lat: -34.397, lng: 150.644 }}\r\n            >\r\n              <InfoWindow>\r\n                <div>hello</div>\r\n              </InfoWindow>\r\n            </Marker>\r\n          )}\r\n        </GoogleMap>\r\n      ))\r\n    )\r\n    return (\r\n      <MyMapComponent\r\n        isMarkerShown\r\n        googleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyCXLr9NcpJc8iwk3psaHI3UJIcMMvBGO5k&v=3.exp&libraries=geometry,drawing,places\"\r\n        loadingElement={<div style={{ height: `100%` }} />}\r\n        containerElement={<div style={{ height: `400px` }} />}\r\n        mapElement={<div style={{ height: `100%` }} />}\r\n      />\r\n    )\r\n  }\r\n}\r\n\r\nexport default MapGo\r\n"]},"metadata":{},"sourceType":"module"}